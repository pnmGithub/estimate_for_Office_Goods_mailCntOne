<Activity mc:Ignorable="sap sap2010" x:Class="Initialize_Applications" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:snm="clr-namespace:System.Net.Mail;assembly=System.Net.Mail" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property sap2010:Annotation.AnnotationText="Dictionary structure to store configuration data of the process (settings, constants and assets)." Name="in_Config" Type="InArgument(scg:Dictionary(x:String, x:Object))" />
    <x:Property Name="BreakTriggerScopeInArgument" Type="InArgument(x:String)" />
    <x:Property Name="out_dt_TransactionData" Type="OutArgument(sd:DataTable)" />
    <x:Property Name="out_mailList" Type="OutArgument(scg:List(snm:MailMessage))" />
    <x:Property Name="out_mailRequestDate" Type="OutArgument(x:String)" />
    <x:Property Name="out_mailAttachmentsIndex" Type="OutArgument(x:Int32)" />
    <x:Property Name="out_strAttachFilename" Type="OutArgument(x:String)" />
  </x:Members>
  <VisualBasic.Settings>
    <x:Null />
  </VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>869.6,3073.6</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>Initialization_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Management.Automation</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>System.Security</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>GlobalVariablesNamespace</x:String>
      <x:String>GlobalConstantsNamespace</x:String>
      <x:String>System.Collections</x:String>
      <x:String>UiPath.Mail</x:String>
      <x:String>UiPath.Mail.Outlook.Activities</x:String>
      <x:String>UiPath.Shared.Activities</x:String>
      <x:String>UiPath.Mail.Activities</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>UiPath.Platform.ResourceHandling</x:String>
      <x:String>Microsoft.VisualBasic.CompilerServices</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.UIAutomationNext.Enums</x:String>
      <x:String>UiPath.UIAutomationCore.Contracts</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Composition</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Management.Automation</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Mail</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Testing.Activities</AssemblyReference>
      <AssemblyReference>UiPath.OCR.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationCore</AssemblyReference>
      <AssemblyReference>UiPath.Mail.Activities.Design</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Linq.Parallel</AssemblyReference>
      <AssemblyReference>System.Collections.Immutable</AssemblyReference>
      <AssemblyReference>System.Linq.Queryable</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>UiPath.Platform</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.Watcher</AssemblyReference>
      <AssemblyReference>System.IO.Packaging</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.AccessControl</AssemblyReference>
      <AssemblyReference>System.IO.FileSystem.DriveInfo</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Forms</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic.Core</AssemblyReference>
      <AssemblyReference>System.CodeDom</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>Microsoft.Win32.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>UiPath.UIAutomationNext</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities.ViewModels</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <Sequence sap2010:Annotation.AnnotationText="Open applications used in the process and do necessary initialization procedures (e.g., login)." DisplayName="Initialize All Applications" sap:VirtualizedContainerService.HintSize="758.4,3008.8" sap2010:WorkflowViewState.IdRef="Sequence_9">
    <Sequence.Variables>
      <Variable x:TypeArguments="x:Boolean" Name="isFolderExists" />
      <Variable x:TypeArguments="x:Boolean" Name="isFileExists" />
      <Variable x:TypeArguments="x:Boolean" Name="isAttachExcel" />
      <Variable x:TypeArguments="x:String" Name="strSheetName" />
      <Variable x:TypeArguments="x:Int32" Name="mailIndex" />
      <Variable x:TypeArguments="x:String" Name="strRequestDate" />
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log message (Initialize applications)" sap:VirtualizedContainerService.HintSize="696,142.4" sap2010:WorkflowViewState.IdRef="LogMessage_1" Level="Trace" Message="[&quot;Opening applications...&quot;]" />
    <ui:MultipleAssign sap2010:Annotation.AnnotationText="isAttachExcel = 첨부파일(엑셀) 존재여부&#xA;strAttachFilename = 메일 첨부파일 이름&#xA;out_mailRequestDate = 견적서 요청 날짜&#xA; - 견적서 요청 메일 제목(규칙성 있다는 가정하에)  = [요청] 날짜_견적서 발급 요청&#xA;out_mailAttachmentsIndex = 견적서 첨부파일 있는 메일 인덱스" DisplayName="Multiple Assign - 견적서 요청 메일 정보 저장용 변수 설정" sap:VirtualizedContainerService.HintSize="696,318.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
      <ui:MultipleAssign.AssignOperations>
        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Boolean">[isAttachExcel]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Boolean">False</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_strAttachFilename]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_5">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:String">[out_mailRequestDate]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:String">
                <Literal x:TypeArguments="x:String" Value="" />
              </InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_6">
            <ui:AssignOperation.To>
              <OutArgument x:TypeArguments="x:Int32">[out_mailAttachmentsIndex]</OutArgument>
            </ui:AssignOperation.To>
            <ui:AssignOperation.Value>
              <InArgument x:TypeArguments="x:Int32">0</InArgument>
            </ui:AssignOperation.Value>
          </ui:AssignOperation>
        </scg:List>
      </ui:MultipleAssign.AssignOperations>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
    </ui:MultipleAssign>
    <Sequence sap2010:Annotation.AnnotationText="폴더 처리 - 해당 폴더 없으면 생성&#xA;- 메일 첨부파일 저장할 폴더 체크&#xA;- 결과파일(PDF) 저장할 폴더 체크" DisplayName="Sequence - 저장할 폴더 처리" sap:VirtualizedContainerService.HintSize="696,143.2" sap2010:WorkflowViewState.IdRef="Sequence_20">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="메일 첨부파일 저장할 폴더 체크" DisplayName="Framework\CreateFolderFile.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="387.2,144.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Framework\CreateFolderFile.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_strPathType">
            <Literal x:TypeArguments="x:String">Folder</Literal>
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_strFullPath">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Path.Combine(in_Config(&quot;strMailSaveFolder&quot;).ToString)" />
          </InArgument>
        </ui:InvokeWorkflowFile.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeWorkflowFile>
      <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="결과파일(PDF) 저장할 폴더 체크" DisplayName="Framework\CreateFolderFile.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="387.2,144.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_3" UnSafe="False" WorkflowFileName="Framework\CreateFolderFile.xaml">
        <ui:InvokeWorkflowFile.Arguments>
          <InArgument x:TypeArguments="x:String" x:Key="in_strPathType">
            <Literal x:TypeArguments="x:String">Folder</Literal>
          </InArgument>
          <InArgument x:TypeArguments="x:String" x:Key="in_strFullPath">
            <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Path.Combine(in_Config(&quot;strSaveFolderPath&quot;).ToString)" />
          </InArgument>
        </ui:InvokeWorkflowFile.Arguments>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:InvokeWorkflowFile>
    </Sequence>
    <Sequence sap2010:Annotation.AnnotationText="* Uipath.Mail.Activities 패키지 설치&#xA;1. 메일 가져오기 (제목 &quot;견적서&quot;, 첨부파일 있는경우로 필터) - 1개로 지정&#xA;2. 첨부파일 체크(엑셀 파일일 경우) - 첨부파일은 1개 라고 가정&#xA;   - 같은 파일명 있으면 삭제&#xA;   - 첨부파일 저장" DisplayName="Sequence - 작업지시서 가져오기" sap:VirtualizedContainerService.HintSize="696,1895.2" sap2010:WorkflowViewState.IdRef="Sequence_10">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:GetOutlookMailMessages FilterByMessageIds="{x:Null}" TimeoutMS="{x:Null}" Account="[in_Config(&quot;strOutlookAccount&quot;).ToString]" sap2010:Annotation.AnnotationText="속성 &gt; Options &gt; Filter&#xA;- 메일 제목 &quot;견적서&quot; 필터&#xA;- 첨부파일 있는 경우 필터" DisplayName="Get Outlook Mail Messages" Filter="[&quot;@SQL=&quot;&quot;urn:schemas:httpmail:subject&quot;&quot; like '%견적서%' AND urn:schemas:httpmail:hasattachment = true&quot;]" GetAttachements="False" sap:VirtualizedContainerService.HintSize="633.6,84.8" sap2010:WorkflowViewState.IdRef="GetOutlookMailMessages_1" MailFolder="[in_Config(&quot;strOutlookFolder&quot;).ToString]" MarkAsRead="False" Messages="[out_mailList]" OnlyUnreadMessages="False" OrderByDate="NewestFirst" Top="1">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:GetOutlookMailMessages>
      <ui:ForEach x:TypeArguments="snm:MailMessage" CurrentIndex="[mailIndex]" DisplayName="For Each" sap:VirtualizedContainerService.HintSize="633.6,1566.4" sap2010:WorkflowViewState.IdRef="ForEach`1_1" Values="[out_mailList]">
        <ui:ForEach.Body>
          <ActivityAction x:TypeArguments="snm:MailMessage">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="snm:MailMessage" Name="mailItem" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body" sap:VirtualizedContainerService.HintSize="600,1378.4" sap2010:WorkflowViewState.IdRef="Sequence_11">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <If sap2010:Annotation.AnnotationText="첨부파일이 엑셀이면 저장하기" Condition="[LCase(mailItem.Attachments(0).Name.split(&quot;.&quot;C).last)= LCase(&quot;xlsx&quot;)]" sap:VirtualizedContainerService.HintSize="556.8,1180" sap2010:WorkflowViewState.IdRef="If_4">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    <x:Boolean x:Key="IsPinned">False</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <If.Then>
                  <Sequence sap:VirtualizedContainerService.HintSize="523.2,965.6" sap2010:WorkflowViewState.IdRef="Sequence_18">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="파일 처리 - 해당 파일 있으면 삭제" DisplayName="Framework\CreateFolderFile.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="480,144.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Framework\CreateFolderFile.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="in_strPathType">
                          <Literal x:TypeArguments="x:String">File</Literal>
                        </InArgument>
                        <InArgument x:TypeArguments="x:String" x:Key="in_strFullPath">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="Path.Combine(in_Config(&quot;strMailSaveFolder&quot;).ToString, mailItem.Attachments(0).Name)" />
                        </InArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <ui:SaveMailAttachments Attachments="{x:Null}" sap2010:Annotation.AnnotationText="path = 폴더경로만 들어감. 파일명 넣어도 파일명의 폴더 생성 후 파일 저장됨&#xA;-&gt; 다른 이름으로 파일저장하고 싶을땐?&#xA;-&gt; Move File 액티비티를 이용해서 변경해줌" DisplayName="Save Attachments" ExcludeInlineAttachments="False" FolderPath="[Path.Combine(in_Config(&quot;strMailSaveFolder&quot;).ToString)]" sap:VirtualizedContainerService.HintSize="480,164" sap2010:WorkflowViewState.IdRef="SaveMailAttachments_1" Message="[mailItem]" OverwriteExisting="False">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:SaveMailAttachments>
                    <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" sap2010:Annotation.AnnotationText="첨부파일(작업지시서) 기준 날짜값 가져오기" DisplayName="Framework\GetDateFromString.xaml - Invoke Workflow File" sap:VirtualizedContainerService.HintSize="480,144.8" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_4" UnSafe="False" WorkflowFileName="Framework\GetDateFromString.xaml">
                      <ui:InvokeWorkflowFile.Arguments>
                        <InArgument x:TypeArguments="x:String" x:Key="BreakTriggerScopeInArgument" />
                        <InArgument x:TypeArguments="x:String" x:Key="in_strFromString">
                          <VisualBasicValue x:TypeArguments="x:String" ExpressionText="mailItem.Attachments(0).Name" />
                        </InArgument>
                        <OutArgument x:TypeArguments="x:String" x:Key="out_strResult">
                          <VisualBasicReference x:TypeArguments="x:String" ExpressionText="strRequestDate" />
                        </OutArgument>
                      </ui:InvokeWorkflowFile.Arguments>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:InvokeWorkflowFile>
                    <ui:MultipleAssign sap2010:Annotation.AnnotationText="isAttachExcel = 첨부파일(엑셀) 존재여부&#xA;strAttachFilename = 메일 첨부파일 이름&#xA;out_mailAttachmentsIndex = 견적서 요청메일이 있는 메일 인덱스 (회신할때 사용)&#xA;out_mailRequestDate = 견적서 요청 날짜" DisplayName="Multiple Assign - 견적서 요청 메일 정보 저장" sap:VirtualizedContainerService.HintSize="480,302.4" sap2010:WorkflowViewState.IdRef="MultipleAssign_2">
                      <ui:MultipleAssign.AssignOperations>
                        <scg:List x:TypeArguments="ui:AssignOperation" Capacity="4">
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Boolean">[isAttachExcel]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Boolean">True</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[out_strAttachFilename]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[mailItem.Attachments(0).Name]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_7">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:Int32">[out_mailAttachmentsIndex]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:Int32">[mailIndex]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                          <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_8">
                            <ui:AssignOperation.To>
                              <OutArgument x:TypeArguments="x:String">[out_mailRequestDate]</OutArgument>
                            </ui:AssignOperation.To>
                            <ui:AssignOperation.Value>
                              <InArgument x:TypeArguments="x:String">[strRequestDate]</InArgument>
                            </ui:AssignOperation.Value>
                          </ui:AssignOperation>
                        </scg:List>
                      </ui:MultipleAssign.AssignOperations>
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:MultipleAssign>
                  </Sequence>
                </If.Then>
                <If.Else>
                  <Sequence sap2010:WorkflowViewState.IdRef="Sequence_19" />
                </If.Else>
              </If>
              <ui:Break sap2010:Annotation.AnnotationText="1번만 실행. 메일을 1개 가져오게 했지만 혹시나 싶어 설정" sap:VirtualizedContainerService.HintSize="556.8,68.8" sap2010:WorkflowViewState.IdRef="Break_1">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:Break>
            </Sequence>
          </ActivityAction>
        </ui:ForEach.Body>
      </ui:ForEach>
    </Sequence>
    <Sequence DisplayName="Sequence - 작업지시서 읽어서 데이터테이블에 저장하기" sap:VirtualizedContainerService.HintSize="696,83.2" sap2010:WorkflowViewState.IdRef="Sequence_24">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <If Condition="[isAttachExcel]" sap:VirtualizedContainerService.HintSize="560,846.4" sap2010:WorkflowViewState.IdRef="If_6">
        <If.Then>
          <Sequence sap:VirtualizedContainerService.HintSize="526.4,492" sap2010:WorkflowViewState.IdRef="Sequence_25">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <ui:ExcelApplicationScope Password="{x:Null}" DisplayName="Excel Application Scope" sap:VirtualizedContainerService.HintSize="483.2,402.4" sap2010:WorkflowViewState.IdRef="ExcelApplicationScope_1" InstanceCachePeriod="3000" WorkbookPath="[Path.Combine(in_Config(&quot;strMailSaveFolder&quot;).ToString,  out_strAttachFilename)]">
              <ui:ExcelApplicationScope.Body>
                <ActivityAction x:TypeArguments="ui:WorkbookApplication">
                  <ActivityAction.Argument>
                    <DelegateInArgument x:TypeArguments="ui:WorkbookApplication" Name="ExcelWorkbookScope" />
                  </ActivityAction.Argument>
                  <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="449.6,292.8" sap2010:WorkflowViewState.IdRef="Sequence_27">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:ExcelGetWorkbookSheet DisplayName="Get Workbook Sheet" sap:VirtualizedContainerService.HintSize="387.2,80.8" sap2010:WorkflowViewState.IdRef="ExcelGetWorkbookSheet_1" Index="0" Sheet="[strSheetName]" />
                    <ui:ExcelReadRange AddHeaders="True" DataTable="[out_dt_TransactionData]" DisplayName="Read Range" sap:VirtualizedContainerService.HintSize="387.2,60" sap2010:WorkflowViewState.IdRef="ExcelReadRange_1" SheetName="[strSheetName]">
                      <ui:ExcelReadRange.Range>
                        <InArgument x:TypeArguments="x:String">
                          <Literal x:TypeArguments="x:String" Value="" />
                        </InArgument>
                      </ui:ExcelReadRange.Range>
                    </ui:ExcelReadRange>
                  </Sequence>
                </ActivityAction>
              </ui:ExcelApplicationScope.Body>
            </ui:ExcelApplicationScope>
          </Sequence>
        </If.Then>
        <If.Else>
          <Sequence sap:VirtualizedContainerService.HintSize="476.8,171.2" sap2010:WorkflowViewState.IdRef="Sequence_26">
            <sap:WorkflowViewStateService.ViewState>
              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
              </scg:Dictionary>
            </sap:WorkflowViewStateService.ViewState>
            <Assign sap:VirtualizedContainerService.HintSize="433.6,81.6" sap2010:WorkflowViewState.IdRef="Assign_3">
              <Assign.To>
                <OutArgument x:TypeArguments="sd:DataTable">[out_dt_TransactionData]</OutArgument>
              </Assign.To>
              <Assign.Value>
                <InArgument x:TypeArguments="sd:DataTable">[New DataTable]</InArgument>
              </Assign.Value>
            </Assign>
          </Sequence>
        </If.Else>
      </If>
    </Sequence>
    <Sequence DisplayName="Sequence - 오피스디포 브라우저 오픈" sap:VirtualizedContainerService.HintSize="696,83.2" sap2010:WorkflowViewState.IdRef="Sequence_28">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">False</x:Boolean>
          <x:Boolean x:Key="IsPinned">False</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:OpenBrowser AutomaticallyDownloadWebDriver="{x:Null}" CommunicationMethod="{x:Null}" Hidden="{x:Null}" NewSession="{x:Null}" Private="{x:Null}" UiBrowser="{x:Null}" BrowserType="Chrome" DisplayName="Open Browser" sap:VirtualizedContainerService.HintSize="483.2,262.4" sap2010:WorkflowViewState.IdRef="OpenBrowser_1" Url="[in_Config(&quot;strURL&quot;).ToString]">
        <ui:OpenBrowser.Body>
          <ActivityAction x:TypeArguments="x:Object">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="x:Object" Name="ContextTarget" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Do" sap:VirtualizedContainerService.HintSize="449.6,136.8" sap2010:WorkflowViewState.IdRef="Sequence_29">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:MaximizeWindow Window="{x:Null}" DisplayName="Maximize Window" sap:VirtualizedContainerService.HintSize="387.2,24.8" sap2010:WorkflowViewState.IdRef="MaximizeWindow_1" />
            </Sequence>
          </ActivityAction>
        </ui:OpenBrowser.Body>
      </ui:OpenBrowser>
    </Sequence>
  </Sequence>
</Activity>